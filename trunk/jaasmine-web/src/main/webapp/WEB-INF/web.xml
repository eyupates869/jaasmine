<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright 2010 LogicLander

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
             
    <display-name>jaasmine-web</display-name>
    <!--
     JaasLoginFilter: filters incoming requests for a
     javax.security.auth.Subject set on the HttpSession.  If found, access to
     the resource is granted.  Otherwise, access is denied and the request is
     sent to JaasLoginServlet.

     Note: this Filter can take 3 init-params:
     * appName:
         the name of an application in the JAAS configuration file.  The JAAS
         configuration file name is set by the java.security.auth.login.config
         System property.  The default is value is jaasmine.spnego.login

     * loginPath:
         a path to a resource in the web application context that can be used
         as a login processor.  This can be a path to a JSP, Servlet or HTML
         page.  If this is set, loginRedirect and loginServletName are ignored.

     * loginRedirect:
         a relative or absolute URL to a login processor. If this is set,
         loginServletName is ignored.

     * loginServletName:
         The value of a servlet-name in this web.xml file that will process the
         login.  The default is JaasLoginServlet.

     * setRemoteUserOnLogin:
         When set to true, wrap HttpServletRequests so that calls to
         getRemoteUser and getUserPrincipal return the user ids associtated with
         the Subject obtained from a successful login.  The default is false.
    -->
    <filter>
        <filter-name>JaasLoginFilter</filter-name>
        <filter-class>com.logiclander.jaasmine.authentication.http.JaasLoginFilter</filter-class>
    </filter>

    <!--
     SPNegoFilter: filters incoming requests for a SPNego token set as an
     HTTP header (Authorization).  If found, and if valid, access to the
     resource is granted.  This filter should be used on web services (i.e.
     REST or SOAP based services).
    -->
    <filter>
        <filter-name>SPNegoFilter</filter-name>
        <filter-class>com.logiclander.jaasmine.authentication.http.SPNegoFilter</filter-class>
    </filter>

	<filter>
		<filter-name>GeneralAuthorizationFilter</filter-name>
		<filter-class>com.logiclander.jaasmine.authentication.http.GeneralAuthorizationFilter</filter-class>
	</filter>

    <!-- Send all web application requests through JaasLoginFilter -->
    <filter-mapping>
        <filter-name>JaasLoginFilter</filter-name>
        <url-pattern>/AboutYou</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>JaasLoginFilter</filter-name>
        <url-pattern>/Home</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>JaasLoginFilter</filter-name>
        <url-pattern>/Login</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>JaasLoginFilter</filter-name>
        <url-pattern>/Logout</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Send all web services requests through SPNegoFilter -->
    <filter-mapping>
        <filter-name>GeneralAuthorizationFilter</filter-name>
        <url-pattern>/wsdemo/*</url-pattern>
    </filter-mapping>


    <!--
      Configured as the default servlet to use for Login.  See the source code
      of com.logiclander.jaasmine.authentication.http.JaasLoginFilter for more
      details.

      Do not change the name of this servlet unless you add an init-param
      appName whose value is the same as the servlet-name below.  See the
      comments for JaasLoginFilter.
    -->
    <servlet>
        <servlet-name>JaasLoginServlet</servlet-name>
        <servlet-class>com.logiclander.jaasminetest.LoginCheckServlet</servlet-class>
    </servlet>
    
    <!--
     Logs out the Subject.  This Servlet is included in the jaasmine-core
     library.

     Note: this servlet can take 1 init-param:

     * postLogoutProcessorName:
         The servlet-name of a servlet in this file that will handle logout
         post processing.  This post-processor could clean up additional
         session information or display a custom logout page.
    -->
    <servlet>
        <servlet-name>JaasLogoutServlet</servlet-name>
        <servlet-class>com.logiclander.jaasmine.authentication.http.SimpleLogoutServlet</servlet-class>
        <init-param>
            <param-name>postLogoutProcessorName</param-name>
            <param-value>PostLogoutServlet</param-value>
        </init-param>
    </servlet>

    <!-- Shows a page with the logged in Subject information printed. -->
    <servlet>
        <servlet-name>AboutYouServlet</servlet-name>
        <servlet-class>com.logiclander.jaasminetest.AboutYouServlet</servlet-class>
    </servlet>

    <!-- Requests from AboutYouServlet are dispatched to this JSP. -->
    <servlet>
        <servlet-name>AboutYouJsp</servlet-name>
        <jsp-file>/WEB-INF/jsp/aboutyou.jsp</jsp-file>
    </servlet>

    <!--
     This is the Home page for this web application.  It will only be displayed
     if there is a logged in Subject.
    -->
    <servlet>
        <servlet-name>Home</servlet-name>
        <jsp-file>/WEB-INF/jsp/protected.jsp</jsp-file>
    </servlet>

    <!--
     This is the welcome page for this web application.
    -->
    <servlet>
        <servlet-name>Welcome</servlet-name>
        <jsp-file>/WEB-INF/jsp/index.jsp</jsp-file>
    </servlet>

    <!--
     This is the post logout servlet for this web application.  It will be
     displayed when the user logs out.  This servlet simply displays a custom
     JSP rather than the default plain text logout message.

     There is no servlet mapping for this servlet as it's called by the
     JaasLogoutServlet via named dispatcher.
    -->
    <servlet>
        <servlet-name>PostLogoutServlet</servlet-name>
        <jsp-file>/WEB-INF/jsp/postLogout.jsp</jsp-file>
    </servlet>

    <!--
     The DemoWSServlet servlet is a demonstration of SPNego token
     authentication for an HTTP web service.
    -->
    <servlet>
        <servlet-name>DemoWSServlet</servlet-name>
        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.logiclander.jaasminetest.ws.DemoWSJaxRsApplication</param-value>
        </init-param>
    </servlet>

    <!--
     Servlet mappings should not be changed in this web application because
     the paths are hard-coded into the JSPs.
    -->
    <servlet-mapping>
        <servlet-name>JaasLoginServlet</servlet-name>
        <url-pattern>/Login</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>JaasLogoutServlet</servlet-name>
        <url-pattern>/Logout</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>AboutYouServlet</servlet-name>
        <url-pattern>/AboutYou</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Home</servlet-name>
        <url-pattern>/Home</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DemoWSServlet</servlet-name>
        <url-pattern>/wsdemo/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Welcome</servlet-name>
        <url-pattern>/Welcome</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Welcome</servlet-name>
        <url-pattern>/index.jsp</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Welcome</servlet-name>
        <url-pattern>/index.html</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>/WEB-INF/jsp/index.jsp</welcome-file>
    </welcome-file-list>
    
</web-app>
